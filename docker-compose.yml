services:
  frontend:
    build: 
      context: packages/nextjs-app
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - cms
    env_file: .env
    ports:
      - 3000:3000
    volumes:
      - ./packages/nextjs-app:/usr/app/
      - /usr/app/node_modules
    networks:
      - shared-network
    command: npm run dev
  cms:
    build: 
      context: packages/strapi-cms
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - db
    env_file: .env
    ports:
      - 1337:1337
    volumes:
      - ./packages/strapi-cms:/usr/app/
      - /usr/app/node_modules
    networks:
      - shared-network
    command: npm run develop
  db:
    image: postgres:latest
    platform: linux/amd64
    restart: always
    networks:
      - shared-network
    environment:
      POSTGRES_DB: ${DATABASE_NAME}
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./pgdata:/var/lib/postgresql/data

networks:
  shared-network:
    driver: bridge